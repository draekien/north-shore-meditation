import { ThemeProvider } from '@/components/theme-provider';
import { BackgroundGradientAnimation } from '@/components/ui/background-gradient-animation';
import { Button } from '@/components/ui/button';
import { ModeToggle } from '@/components/ui/mode-toggle';
import {
  MobileNavigationMenuListItem,
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuListItem,
  NavigationMenuTrigger,
  navigationMenuTriggerStyle,
} from '@/components/ui/navigation-menu';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';
import { locales, type Locale } from '@/lib/constants';
import { cn } from '@/lib/utils';
import { Analytics } from '@vercel/analytics/react';
import { MenuIcon, Sparkles } from 'lucide-react';
import type { Metadata } from 'next';
import { Ma_Shan_Zheng, Noto_Sans_SC } from 'next/font/google';
import localFont from 'next/font/local';
import Link from 'next/link';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '../../components/ui/accordion';
import { getDictionary } from './dictionaries';
import './globals.css';

const maShanZheng = Ma_Shan_Zheng({
  display: 'swap',
  variable: '--font-ma-shan-zheng',
  weight: '400',
  subsets: ['latin'],
});

const notoSans = Noto_Sans_SC({
  display: 'swap',
  variable: '--font-noto-sans',
  weight: 'variable',
  subsets: ['latin'],
});

const geistSans = localFont({
  src: '../fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: '../fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'North Shore Meditation',
  description: 'Generated by create next app',
};

export async function generateStaticParams() {
  return locales.map((locale) => ({ lang: locale }));
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: { lang: Locale };
}>) {
  const dict = await getDictionary(params.lang);
  return (
    <html lang={params.lang}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${maShanZheng.variable} ${notoSans.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="light"
          enableSystem={false}
          enableColorScheme
          disableTransitionOnChange
        >
          <BackgroundGradientAnimation containerClassName="fixed -z-50" />
          <header className="flex h-20 w-full shrink-0 items-center px-4 md:px-6">
            <h3 className="container p-4">
              <Link href="/" className="font-bold xl:text-2xl">
                {dict.company}
              </Link>
            </h3>
            <Sheet>
              <SheetTrigger asChild>
                <Button variant="ghost" size="icon" className="xl:hidden">
                  <MenuIcon className="h-6 w-6" />
                  <span className="sr-only">Toggle navigation menu</span>
                </Button>
              </SheetTrigger>
              <SheetContent side="right" className="bg-white backdrop-blur-md dark:bg-slate-950/75">
                <div className="flex h-full flex-col justify-between gap-10 py-4">
                  <Accordion type="single" defaultValue="tm" collapsible>
                    <AccordionItem value="tm">
                      <AccordionTrigger>{dict.nav.tm.title}</AccordionTrigger>
                      <AccordionContent>
                        <ScrollArea className="h-72">
                          <ul className="grid gap-3">
                            <li>
                              <a
                                className="flex h-full w-full select-none flex-col justify-end rounded-md bg-gradient-to-b from-muted/50 to-muted p-6 no-underline outline-none focus:bg-accent focus:shadow-md"
                                href={dict.nav.tm.hero.href}
                              >
                                <Sparkles className={cn('h-6 w-6 text-amber-400')} />
                                <div className="mb-2 mt-4 text-lg font-medium">{dict.nav.tm.hero.title}</div>
                                <p className="text-sm leading-tight text-muted-foreground">
                                  {dict.nav.tm.hero.description}
                                </p>
                              </a>
                            </li>
                            {dict.nav.tm.items.map((item) => (
                              <MobileNavigationMenuListItem key={item.title} title={item.title} href={item.href}>
                                {item.description}
                              </MobileNavigationMenuListItem>
                            ))}
                          </ul>
                        </ScrollArea>
                      </AccordionContent>
                    </AccordionItem>
                    <AccordionItem value="programs">
                      <AccordionTrigger>{dict.nav.programs.title}</AccordionTrigger>
                      <AccordionContent>
                        <ul className="grid gap-3">
                          {dict.nav.programs.items.map((component) => (
                            <MobileNavigationMenuListItem
                              key={component.title}
                              title={component.title}
                              href={component.href}
                            >
                              {component.description}
                            </MobileNavigationMenuListItem>
                          ))}
                        </ul>
                      </AccordionContent>
                    </AccordionItem>
                    <AccordionItem value="more">
                      <AccordionTrigger>{dict.nav.more}</AccordionTrigger>
                      <AccordionContent>
                        <ul className="grid gap-3">
                          <MobileNavigationMenuListItem href="/about-us" title={dict.nav.aboutUs} />
                          <MobileNavigationMenuListItem href="/contact-us" title={dict.nav.contactUs} />
                        </ul>
                      </AccordionContent>
                    </AccordionItem>
                  </Accordion>
                  <Button className="font-semibold">{dict.callToAction}</Button>
                </div>
              </SheetContent>
            </Sheet>
            <div className="container mx-auto hidden items-center justify-between p-4 xl:flex">
              <NavigationMenu>
                <NavigationMenuList>
                  <NavigationMenuItem>
                    <NavigationMenuTrigger>{dict.nav.tm.title}</NavigationMenuTrigger>
                    <NavigationMenuContent>
                      <ul className="grid gap-3 p-6 md:w-[400px] lg:w-[500px] lg:grid-cols-[.75fr_1fr]">
                        <li className="row-span-3">
                          <NavigationMenuLink asChild>
                            <a
                              className="flex h-full w-full select-none flex-col justify-end rounded-md bg-gradient-to-b from-muted/50 to-muted p-6 no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground"
                              href={dict.nav.tm.hero.href}
                            >
                              <Sparkles className={cn('h-6 w-6 text-amber-400')} />
                              <div className="mb-2 mt-4 text-lg font-medium">{dict.nav.tm.hero.title}</div>
                              <p className="text-sm leading-tight text-muted-foreground">
                                {dict.nav.tm.hero.description}
                              </p>
                            </a>
                          </NavigationMenuLink>
                        </li>
                        {dict.nav.tm.items.map((item) => (
                          <NavigationMenuListItem key={item.href} href={item.href} title={item.title}>
                            {item.description}
                          </NavigationMenuListItem>
                        ))}
                      </ul>
                    </NavigationMenuContent>
                  </NavigationMenuItem>
                  <NavigationMenuItem>
                    <NavigationMenuTrigger>{dict.nav.programs.title}</NavigationMenuTrigger>
                    <NavigationMenuContent>
                      <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
                        {dict.nav.programs.items.map((component) => (
                          <NavigationMenuListItem key={component.title} title={component.title} href={component.href}>
                            {component.description}
                          </NavigationMenuListItem>
                        ))}
                      </ul>
                    </NavigationMenuContent>
                  </NavigationMenuItem>
                  <NavigationMenuItem>
                    <Link href="/about-us" legacyBehavior passHref>
                      <NavigationMenuLink className={navigationMenuTriggerStyle()}>
                        {dict.nav.aboutUs}
                      </NavigationMenuLink>
                    </Link>
                  </NavigationMenuItem>
                  <NavigationMenuItem>
                    <Link href="/contact-us" legacyBehavior passHref>
                      <NavigationMenuLink className={navigationMenuTriggerStyle()}>
                        {dict.nav.contactUs}
                      </NavigationMenuLink>
                    </Link>
                  </NavigationMenuItem>
                </NavigationMenuList>
              </NavigationMenu>
              <ModeToggle />
              <Button className="font-semibold">{dict.callToAction}</Button>
            </div>
          </header>
          {children}
          <footer className="bg-emerald-900 py-8 text-white">
            <div className="container mx-auto px-4">
              <div className="flex flex-col items-center justify-between md:flex-row">
                <div className="mb-4 md:mb-0">
                  <h3 className="text-2xl font-semibold">{dict.company}</h3>
                  <p className="text-emerald-50">{dict.tagline}</p>
                </div>
                <div className="text-center md:text-right">
                  <p>133 Longueville Rd, Lane Cove NSW 2066</p>
                  <p>
                    Email: <Link href="mailto:tm@northshoremeditation.com">tm@northshoremeditation.com</Link>
                  </p>
                  <p>
                    Phone: <Link href="tel:+61424450578">+61 424 450 578</Link>{' '}
                  </p>
                </div>
              </div>
            </div>
          </footer>
        </ThemeProvider>
        <Analytics />
      </body>
    </html>
  );
}
